
          window.__NEXT_REGISTER_PAGE('/', function() {
            var comp = module.exports=webpackJsonp([9],{356:function(a,b,c){a.exports=c(357)},357:function(a,b,c){"use strict";function d(a){return a&&a.__esModule?a:{default:a}}Object.defineProperty(b,"__esModule",{value:!0});var e=c(0),f=d(e),g=c(6),h=d(g),i=c(8),j=d(i),k=c(7),l={attach:function(a){a.loadFragmentShader("// Author: @amagitakayosi\n// 2017-10-23\nprecision mediump float;\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\n// Util functions copied from http://glslsandbox.com/e#43153.1\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,s,-s,c);}\nmat2 m2 = mat2(0.95534, 0.29552, -0.29552, 0.95534);\nfloat tri(in float x){return clamp(abs(fract(x)-.5),0.01,0.49);}\nvec2 tri2(in vec2 p){return vec2(tri(p.x)+tri(p.y),tri(p.y+tri(p.x)));}\n\nfloat triNoise2d(in vec2 p, float spd)\n{\n  float z=1.8;\n  float z2=2.5;\n  float rz = 0.;\n  p *= mm2(p.x*0.06);\n  vec2 bp = p;\n  for (float i=0.; i<5.; i++ )\n  {\n    vec2 dg = tri2(bp*1.85)*.75;\n    dg *= mm2(time*spd);\n    p -= dg/z2;\n\n    bp *= 1.3;\n    z2 *= .45;\n    z *= .42;\n    p *= 1.21 + (rz-1.0)*.02;\n\n    rz += tri(p.x+tri(p.y))*z;\n    p*= -m2;\n  }\n  return clamp(1./pow(rz*29., 1.3),0.,.55);\n}\n\nvoid main() {\n  vec2 p = (gl_FragCoord.xy * 2. - resolution) / min(resolution.x, resolution.y);\n  float t = time * .3 + 100.;\n\n  p = p * .5 + 1.;\n  p.x += 2.;  // Noises are too weak around origin\n\n  p /= vec2(\n    triNoise2d(p, p.x*.002+t*.002),\n    triNoise2d(p, p.y*.002+t*.002)\n  ) * 20.;  // zoom factor\n\n  gl_FragColor = vec4(\n    0.8 * sin(p.x * 2.3 + 2.7),\n    0.8 * sin(p.y * 2.2 + 3.7),\n    .8,\n    1.0\n  ) * .6;\n}\n")}},m={en:(0,j.default)("<div align=\"center\">\n  <img alt=\"logo\" src=\"/static/images/logo_720h.png\" width=\"192\"/>\n  <h1>VEDA</h1><i>VJ system on Atom</i>\n  <br/>\n</div>\n\n\n<!-- ## Let your Atom blink. -->\n\nVEDA is an Atom package for VJ / Livecoding with GLSL.\n\n<video src=\"/static/videos/veda.mp4\" autoplay loop></video>\n\n\n### Easy GLSL runtime\n\nVEDA supports both fragment shaders and vertex shaders.\nIn fragment shaders, you can use uniform variables like <a target=\"\\_blank\" href=\"http://glslsandbox.com/\">GLSL Sandbox</a>.\nIn vertex shaders, you can use uniform variables like <a target=\"\\_blank\" href=\"https://vertexshaderart.com/\">vertexshaderart.com</a>.\n\n\n### Cross-platform by design\n\nVEDA is built on web technologies and provided as an Atom package.\nIt works on Windows, macOS, and Linux.\n\n\n### Auto-completion, Linters, ...\n\nBecause VEDA runs on Atom, you can write GLSL with your favorite settings, package, and snippets.\nAlso, VEDA automatically installs <a target=\"\\_blank\" href=\"https://atom.io/packages/autocomplete-glsl\">autocomplete-glsl</a> and <a target=\"\\_blank\" href=\"https://atom.io/packages/autocomplete-glsl\">linter-glsl</a> for rapid GLSL development.\n\n\n### Audio, MIDI, OSC, and more!\n\nVEDA supports a variety of inputs such as:\n\n- Audio\n- MIDI\n- OSC\n- WebCam\n- Gamepad\n- Keyboard\n- Mouse\n\n<br/>\n\n<!-- ## VEDA.js\n\nVEDA.js is a GLSL framework for modern web development.\nIt was created as a part of VEDA, and published to npm later.\n\n[VEDA.js](/vedajs) -->\n\n\n<!-- ## LICENSE\n\nProjects around VEDA is licensed in **MIT** license.\nSo you can use them anywhere you want! -->\n\n\n---\n\n\nIf you like it, please post to Twitter with hashtag `#VEDAJS`.\nWe'll be happy to see your tweets!\uD83D\uDE38\n\n<a href=\"https://twitter.com/intent/tweet?url=https://veda.gl/&hashtags=vedajs\" target=\"\\_blank\">Tweet with #VEDAJS</a>\n"),ja:(0,j.default)("<div align=\"center\">\n  <img alt=\"logo\" src=\"/static/images/logo_720h.png\" width=\"192\"/>\n  <h1>VEDA</h1><i>VJ system on Atom</i>\n  <br/>\n</div>\n\n\n<!-- ## Atom\u4E0A\u3067\u52D5\u4F5C\u3059\u308BVJ\u30B7\u30B9\u30C6\u30E0 -->\n\nVEDA\u306F\u3001Atom\u30A8\u30C7\u30A3\u30BF\u3067\u306EVJ\u3084\u30E9\u30A4\u30D6\u30B3\u30FC\u30C7\u30A3\u30F3\u30B0\u3092\u53EF\u80FD\u306B\u3059\u308B\u30D1\u30C3\u30B1\u30FC\u30B8\u3067\u3059\u3002\n\n<video src=\"/static/videos/veda.mp4\" autoplay loop></video>\n\n\n### \u4F7F\u3044\u3084\u3059\u3044GLSL\u5B9F\u884C\u74B0\u5883\n\nVEDA\u306F\u30D5\u30E9\u30B0\u30E1\u30F3\u30C8\u30B7\u30A7\u30FC\u30C0\u3001\u9802\u70B9\u30B7\u30A7\u30FC\u30C0\u3069\u3061\u3089\u3082\u5BFE\u5FDC\u3057\u3066\u3044\u307E\u3059\u3002\n\u307E\u305F\u3001<a target=\"\\_blank\" href=\"http://glslsandbox.com/\">GLSL Sandbox</a>\u3084<a target=\"\\_blank\" href=\"https://vertexshaderart.com/\">vertexshaderart.com</a>\u3068\u3044\u3063\u305FGLSL\u74B0\u5883\u3068\u540C\u3058uniform\u5909\u6570\u304C\u5229\u7528\u3067\u304D\u307E\u3059\u3002\n\n\n### \u30AF\u30ED\u30B9\u30D7\u30E9\u30C3\u30C8\u30D5\u30A9\u30FC\u30E0\n\nVEDA\u306FWeb\u6280\u8853\u306B\u3088\u3063\u3066\u958B\u767A\u3055\u308C\u3001Atom\u306E\u30D1\u30C3\u30B1\u30FC\u30B8\u3068\u3057\u3066\u63D0\u4F9B\u3055\u308C\u3066\u3044\u307E\u3059\u3002\n\u305D\u306E\u305F\u3081\u3001Windows, macOS, Linux\u306E\u3069\u306E\u30D7\u30E9\u30C3\u30C8\u30D5\u30A9\u30FC\u30E0\u3067\u3082\u52D5\u4F5C\u3057\u307E\u3059\u3002\n\n\n### \u81EA\u52D5\u88DC\u5B8C\u3001linter\u3001etc\u2026\u2026\n\n\u30E6\u30FC\u30B6\u30FC\u306F\u666E\u6BB5\u4F7F\u3063\u3066\u3044\u308BAtom\u30D1\u30C3\u30B1\u30FC\u30B8\u3084\u30B9\u30CB\u30DA\u30C3\u30C8\u3092\u5229\u7528\u3067\u304D\u307E\u3059\u3002\n\u307E\u305F\u3001VEDA\u306F <a target=\"\\_blank\" href=\"https://atom.io/packages/autocomplete-glsl\">autocomplete-glsl</a>\u3001<a target=\"\\_blank\" href=\"https://atom.io/packages/linter-glsl\">linter-glsl</a>\u3092\u81EA\u52D5\u3067\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3057\u3001\u5FEB\u9069\u306AGLSL\u30B3\u30FC\u30C7\u30A3\u30F3\u30B0\u74B0\u5883\u3092\u5B9F\u73FE\u3057\u307E\u3059\u3002\n\n\n### Audio, MIDI, OSC, and more!\n\nVEDA\u3067\u306F\u3001\u69D8\u3005\u306A\u30C7\u30FC\u30BF\u3092GLSL\u5185\u3067\u5229\u7528\u3067\u304D\u307E\u3059\u3002\u4F8B\u3048\u3070:\n\n- \u97F3\u58F0\u5165\u529B\n- MIDI\u5165\u529B\n- OSC\n- Web\u30AB\u30E1\u30E9\n- \u30B2\u30FC\u30E0\u30D1\u30C3\u30C9\n- \u30AD\u30FC\u30DC\u30FC\u30C9\u5165\u529B\n- \u30DE\u30A6\u30B9\u4F4D\u7F6E\n\n\n<!-- ## VEDA.js\n\nVEDA.js\u306F\u3001\u30D6\u30E9\u30A6\u30B6\u4E0A\u3067GLSL\u3092\u5B9F\u884C\u3059\u308B\u305F\u3081\u306E\u30D5\u30EC\u30FC\u30E0\u30EF\u30FC\u30AF\u3067\u3059\u3002\n\u5143\u3005\u306FVEDA\u306EGLSL\u30A8\u30F3\u30B8\u30F3\u3068\u3057\u3066\u958B\u767A\u3055\u308C\u3001\u5F8C\u306Bnpm\u30D1\u30C3\u30B1\u30FC\u30B8\u3068\u3057\u3066\u516C\u958B\u3055\u308C\u307E\u3057\u305F\u3002\n\n[VEDA.js](/vedajs) -->\n\n\n<!-- ## \u30E9\u30A4\u30BB\u30F3\u30B9\n\nVEDA\u3001\u3042\u308B\u3044\u306F\u95A2\u9023\u3059\u308B\u30E9\u30A4\u30D6\u30E9\u30EA\u306F\u3001\u5168\u3066 **MIT** \u30E9\u30A4\u30BB\u30F3\u30B9\u3067\u516C\u958B\u3055\u308C\u3066\u3044\u307E\u3059\u3002\n\u3064\u307E\u308A\u3001\u3069\u306E\u30D7\u30ED\u30B8\u30A7\u30AF\u30C8\u3067\u3082\u5236\u9650\u306A\u304F\u5229\u7528\u3067\u304D\u307E\u3059\uFF01 -->\n\n\n<hr/>\n\n\nVEDA\u3092\u6C17\u306B\u5165\u3063\u3066\u3044\u305F\u3060\u3051\u305F\u3089\u3001\u305C\u3072[\u30CF\u30C3\u30B7\u30E5\u30BF\u30B0 `#VEDAJS` \u3067\u30C4\u30A4\u30FC\u30C8](https://twitter.com/intent/tweet?url=https://veda.gl/&hashtags=vedajs)\u3057\u3066\u304F\u3060\u3055\u3044\u3002\n\u7686\u3055\u3093\u306E\u3054\u610F\u898B\u30FB\u3054\u611F\u60F3\u3092\u304A\u5F85\u3061\u3057\u3066\u3044\u307E\u3059\uFF01\uD83D\uDE38\n")};b.default=(0,k.withReduxSaga)(function(){return f.default.createElement(h.default,{shader:l,article:m})})}},[356]);
            return { page: comp.default }
          })
        