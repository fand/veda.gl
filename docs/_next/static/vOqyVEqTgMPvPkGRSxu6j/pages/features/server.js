(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{345:function(e,n,r){__NEXT_REGISTER_PAGE("/features/server",function(){return e.exports=r(346),{page:e.exports.default}})},346:function(e,n,r){"use strict";r.r(n);var t=r(0),s=r.n(t),a=r(2),o=r(3),i=r(1);n.default=Object(a.b)()(function(){return s.a.createElement(o.a,{path:"/features/server",article:{en:Object(i.default)('---\ntitle: Server Mode\n---\n### Server Mode\n\nIf you wanna show shaders on other displays, you can use server mode.\n\nWhen `server` is specified in settings, VEDA runs in server mode.\nVEDA launches a local web server to show the shaders in browsers instead of the background of Atom.\n\nAdd this setting at the top of the shader, then open `http://localhost:3000`.\n\n```glsl\n/*\n{\n  "server": 3000,\n}\n*/\n```\n\nWhen you edit the shader and hit `ctrl-enter`, VEDA immediately send the shader to the browser.\nTo show the shaders fullscreen, use the features of browsers.\n\nSee an [example](./examples/server.frag) for actual usage.\n\n_Warning_: Currently we can\'t use videos/images outside the project directory in server mode.\n'),ja:Object(i.default)('---\ntitle: サーバーモード\n---\n# サーバーモード\n\nシェーダーを他のディスプレイに表示したい場合は、サーバーモードをご利用ください。\n\n設定に `server` プロパティを追加すると、VEDAはサーバーモードになります。\nVEDAはシェーダーの実行結果をAtomの背景に表示する代わりに、ローカルPC上でWebサーバーを起動します。\n\n以下の設定をシェーダーの先頭に追加し、ブラウザで `http://localhost:3000` を開くと、シェーダーの実行結果が表示されます。\n\n```glsl\n/*\n{\n  "server": 3000,\n}\n*/\n```\n\nシェーダーを編集して `ctrl-enter` を実行すると、編集内容はブラウザの画面に反映されます。\nディスプレイに全画面表示したい場合は、ブラウザの機能を使うと良いでしょう。\n\nより詳しい使い方は [example](./examples/server.frag) を参照してください。\n\n<i>注意</i> : サーバーモードでは、プロジェクトのディレクトリ外の画像や動画はロードできなくなります\n')}})})}},[[345,1,0]]]);