(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{349:function(e,n,t){__NEXT_REGISTER_PAGE("/features/video",function(){return e.exports=t(350),{page:e.exports.default}})},350:function(e,n,t){"use strict";t.r(n);var o=t(0),i=t.n(o),a=t(2),r=t(3),u=t(1);n.default=Object(a.b)()(function(){return i.a.createElement(r.a,{path:"/features/video",article:{en:Object(u.default)("---\ntitle: Loading videos - VEDA.js\ndescription: How to use video files in GLSL with VEDA.js\n---\n# Loading videos\n\n## Usage\n\n```js\nveda.loadTexture('texture_name', textureUrlOrPath);\n```\n\nYou can also unload the texture to reduce memory usage.\n\n```js\nveda.loadTexture('texture_name', textureUrlOrPath);\n```\n\n---\n\nVideo by [beeple - ANGULAR](https://vimeo.com/174504082)\n")},shader:{attach:function(e){e.loadTexture("video1","/static/videos/1.mp4"),e.loadTexture("video2","/static/videos/2.mp4"),e.loadTexture("video3","/static/videos/3.mp4"),e.loadFragmentShader("precision mediump float;\nuniform float time;\nuniform vec2 resolution;\nuniform sampler2D video1;\nuniform sampler2D backbuffer;\n\nvoid main() {\n    vec2 p = (gl_FragCoord.xy * 2. - resolution) / min(resolution.x, resolution.y);\n    p = abs(p);\n\n    if (mod(time, 10.) < 5.) {\n        p *= p;\n    }\n\n    gl_FragColor = texture2D(video1, p) * .2;\n\n    vec2 uv = gl_FragCoord.xy / resolution;\n    gl_FragColor += texture2D(backbuffer, uv) * .8;\n}\n")},detach:function(e){e.unloadTexture("video1","/static/videos/1.mp4"),e.unloadTexture("video2","/static/videos/2.mp4"),e.unloadTexture("video3","/static/videos/3.mp4")}}})})}},[[349,1,0]]]);