(window.webpackJsonp=window.webpackJsonp||[]).push([["9b3b"],{"fC/G":function(n,e,t){"use strict";t.r(e);var i=t("q1tI"),a=t.n(i),s=t("/MKj"),o=t("SQ8s"),r=t("o2GN");e.default=Object(s.b)()(function(){return a.a.createElement(o.a,{path:"/settings",article:{en:Object(r.default)('---\ntitle: Settings\n---\n# Settings\n\nVEDA has 3 ways to change settings: `Global Settings`, `Project Settings` and `File Settings`.\n\nThe order of priority is `File Settings > Project Settings > Global Settings`.\nFor example, when you set `"audio": false` in Project Settings and `"audio": true` in File Settings, VEDA enables audio inputs.\n\n\n## Global Settings\n\nYou can set Global Settings from Atom\'s `Settings` > `Packages` menu.\nYou can set these properties in the Settings pane.\n\n- `glslangValidator path`\n  - ref. [Install `glslslangValidator`](/atom#glslslangvalidator)\n- `Pixel Ratio`:\n  - Ratio of pixel-per-rendering call\n  - Increasing this will reduce CPU/GPU load\n- `Frameskip`\n  - Number of frames to skip rendering\n  - e.g. If Frameskip is `2` FPS is `30` (= 60 / 2)\n- `Vertex Count`\n  - Number of vertices in vertex shader\n- `Vertex Mode`\n  - How to draw vertices\n\n\n## Project Settings\n\nProject settings is loaded from `.vedarc` on your project root.\n\n`.vedarc` is parsed as [JSON5](https://github.com/json5/json5) format.\nIt\'s almost the same as JSON, but it\'s more easy to write:\n\n```js\n{\n  "audio": true, // Enable audio input\n  "camera": true, // Enable WebCam input\n\n  IMPORTED: { // "" is not necessary\n    image: {\n      "PATH": "./images/1.jpg",\n    },\n  },  // trailing-comma is OK\n}\n```\n\n`.vedarc` is loaded on startup and reloaded automatically when you edit it.\n\n\n## File Settings\n\nYou can also write settings specific for the file.\nWrite comments on the head of the file like this:\n\n```glsl\n/*{\n  "audio": true,  // Audio input is enabled only in this file\n}*/\nvoid main() {\n  ...\n}\n```\n\n\n## Which one should I use?\n\nUse `.vedarc` for settings such as loading images / videos you use in the project.\nOtherwise, write settings to file comment as File Settings.\n'),ja:Object(r.default)('---\ntitle: 設定方法\n---\n# 設定方法\n\nVEDAの設定は、 `Global Settings`, `Project Settings`, `File Settings` の3通りの方法で行います。\n\n優先順位は `File Settings > Project Settings > Global Settings` となっています。\n例えば、Project Settingsで `"audio": false` となっていても、 File Settingsで `"audio": true` とした場合、音声入力は有効になります。\n\n\n## Global Settings\n\nAtomの設定の `Packages` タブで `veda` と入力すると、VEDAの設定画面を開くことができます。\n設定画面では、以下の項目のデフォルト値を設定できます。\n\n- `glslangValidator path`\n  - [`glslslangValidator` のパス](/atom#glslslangvalidator)\n- `Pixel Ratio`:\n  - 描画を行なうピクセルの割合\n  - 大きい数字にするとCPU/GPU負荷を軽減できる\n- `Frameskip`\n  - 描画をスキップするフレームの数\n  - 例: `2` の場合、FPSは `30` (= 60 / 2) となる\n- `Vertex Count`\n  - 頂点シェーダーの頂点の数\n- `Vertex Mode`\n  - 頂点シェーダーの描画モード\n\n\n## Project Settings\n\nAtomで開いているディレクトリ直下に `.vedarc` ファイルを作成すると、そのディレクトリでのみ有効な設定を書くことができます。\n\n設定は[JSON5](https://github.com/json5/json5)形式で書きます。\n基本的にはJSONと同じですが、コメントを書けたり、少しだけ書きやすくやっています。\n\n```js\n{\n  "audio": true, // 音声入力を有効にする\n  "camera": true, // Webカメラ入力を有効にする\n\n  IMPORTED: { // "" で囲まなくてもOK\n    image: {\n      "PATH": "./images/1.jpg",\n    },\n  },  // 末尾に , も書ける\n}\n```\n\n`.vedarc` はVEDA起動時に自動的にロードされます。\n`.vedarc` を編集して保存すると、変更は自動的に反映されます。\n\n\n## File Settings\n\nファイルの先頭にJSON5形式のコメントを追加することで、そのファイルでのみ有効な設定を書くことができます。\n\n```glsl\n/*{\n  "audio": true,  // このファイルでのみ音声入力が有効\n}*/\nvoid main() {\n  /* 省略 */\n}\n```\n\n\n## 実際の使い分け\n\nプロジェクトで使いまわす画像/動画ファイルの設定は `.vedarc` 書いておくと便利です。\nその他の設定は、なるべく File Settings として、ファイル先頭のコメントに書くと良いでしょう。\n')}})})},nkd9:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/settings",function(){var n=t("fC/G");return{page:n.default||n}}])}},[["nkd9","5d41","9da1"]]]);