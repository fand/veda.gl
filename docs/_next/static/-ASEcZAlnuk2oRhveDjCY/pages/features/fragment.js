(window.webpackJsonp=window.webpackJsonp||[]).push([["e054"],{"2ya/":function(n,e,t){"use strict";t.r(e);var o=t("q1tI"),r=t.n(o),a=t("/MKj"),i=t("SQ8s"),l=t("o2GN");e.default=Object(a.b)()(function(){return r.a.createElement(i.a,{path:"/features/fragment",article:{en:Object(l.default)("---\ntitle: Fragment Shaders\ndescription: How to run fragment shaders on VEDA\n---\n# Fragment Shaders\n\nYou can run fragment shaders like [GLSL Sandbox](http://glslsandbox.com) on VEDA.\n\nFragment shaders must be named like `*.frag`.\nCreate a file `foo.frag` like this:\n\n```glsl\nprecision mediump float;\nuniform float time;\nuniform vec2 resolution;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    gl_FragColor = vec4(uv, 0.5 + 0.5 * sin(time), 1.0);\n}\n```\n\nThen save it and hit `ctrl-enter` to run it.\nVEDA will show the result on the background.\n"),ja:Object(l.default)("---\ntitle: フラグメントシェーダー\ndescription: VEDAで基本的なフラグメントシェーダーを実行する方法\n---\n\n# フラグメントシェーダー\n\nVEDA では、[GLSL Sandbox](http://glslsandbox.com) のような形式のフラグメントシェーダーを実行できます。\n\nフラグメントシェーダーのファイル名は `*.frag` という形式にしてください。\n例えば、 `foo.frag` というファイルを作成し、以下の内容をコピペしてください。\n\n```glsl\nprecision mediump float;\nuniform float time;\nuniform vec2 resolution;\n\nvoid main() {\n    vec2 uv = gl_FragCoord.xy / resolution.xy;\n    gl_FragColor = vec4(uv, 0.5 + 0.5 * sin(time), 1.0);\n}\n```\n\nファイルを保存して `ctrl-enter` を押すと、VEDA はシェーダーを実行し、Atom の背景に表示します。\n")}})})},f5Pi:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/features/fragment",function(){var n=t("2ya/");return{page:n.default||n}}])}},[["f5Pi","31d6","1a40"]]]);