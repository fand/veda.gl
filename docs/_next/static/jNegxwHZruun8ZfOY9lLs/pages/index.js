(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{RNiq:function(n,t,e){"use strict";e.r(t);var a=e("q1tI"),o=e.n(a),r=e("/MKj"),s=e("SQ8s"),i=e("o2GN"),l={attach:function(n){n.loadFragmentShader("// Author: @amagitakayosi\n// 2017-10-23\nprecision mediump float;\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\n// Util functions copied from http://glslsandbox.com/e#43153.1\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,s,-s,c);}\nmat2 m2 = mat2(0.95534, 0.29552, -0.29552, 0.95534);\nfloat tri(in float x){return clamp(abs(fract(x)-.5),0.01,0.49);}\nvec2 tri2(in vec2 p){return vec2(tri(p.x)+tri(p.y),tri(p.y+tri(p.x)));}\n\nfloat triNoise2d(in vec2 p, float spd)\n{\n  float z=1.8;\n  float z2=2.5;\n  float rz = 0.;\n  p *= mm2(p.x*0.06);\n  vec2 bp = p;\n  for (float i=0.; i<5.; i++ )\n  {\n    vec2 dg = tri2(bp*1.85)*.75;\n    dg *= mm2(time*spd);\n    p -= dg/z2;\n\n    bp *= 1.3;\n    z2 *= .45;\n    z *= .42;\n    p *= 1.21 + (rz-1.0)*.02;\n\n    rz += tri(p.x+tri(p.y))*z;\n    p*= -m2;\n  }\n  return clamp(1./pow(rz*29., 1.3),0.,.55);\n}\n\nvoid main() {\n  vec2 p = (gl_FragCoord.xy * 2. - resolution) / min(resolution.x, resolution.y);\n  float t = time * .3 + 100.;\n\n  p = p * .5 + 1.;\n  p.x += 2.;  // Noises are too weak around origin\n\n  p /= vec2(\n    triNoise2d(p, p.x*.002+t*.002),\n    triNoise2d(p, p.y*.002+t*.002)\n  ) * 20.;  // zoom factor\n\n  gl_FragColor = vec4(\n    0.8 * sin(p.x * 2.3 + 2.7),\n    0.8 * sin(p.y * 2.2 + 3.7),\n    .8,\n    1.0\n  ) * .6;\n}\n")}},c={en:Object(i.default)('<div align="center">\n  <img alt="logo" src="/static/images/logo_720h.png" width="192"/>\n  <h1>VEDA</h1><i>VJ system on Atom</i>\n  <br/>\n</div>\n\n\n\x3c!-- ## Let your Atom blink. --\x3e\n\nVEDA is an Atom package for VJ / Livecoding with GLSL.\n\n![](https://user-images.githubusercontent.com/1403842/28673275-1d42b062-731d-11e7-92b0-bde5ca1f1cae.gif)\n\n\n### Easy GLSL runtime\n\nVEDA supports both fragment shaders and vertex shaders.\nIn fragment shaders, you can use uniform variables like <a target="\\_blank" href="http://glslsandbox.com/">GLSL Sandbox</a>.\nIn vertex shaders, you can use uniform variables like <a target="\\_blank" href="https://vertexshaderart.com/">vertexshaderart.com</a>.\n\n\n### Cross-platform by design\n\nVEDA is built on web technologies and provided as an Atom package.\nIt works on Windows, macOS, and Linux.\n\n\n### Auto-completion, Linters, ...\n\nBecause VEDA runs on Atom, you can write GLSL with your favorite settings, package, and snippets.\nAlso, VEDA automatically installs <a target="\\_blank" href="https://atom.io/packages/autocomplete-glsl">autocomplete-glsl</a> and <a target="\\_blank" href="https://atom.io/packages/autocomplete-glsl">linter-glsl</a> for rapid GLSL development.\n\n\n### Audio, MIDI, OSC, and more!\n\nVEDA supports a variety of inputs such as:\n\n- Audio\n- MIDI\n- OSC\n- WebCam\n- Gamepad\n- Keyboard\n- Mouse\n\n<br/>\n\n\x3c!-- ## VEDA.js\n\nVEDA.js is a GLSL framework for modern web development.\nIt was created as a part of VEDA, and published to npm later.\n\n[VEDA.js](/vedajs) --\x3e\n\n\n\x3c!-- ## LICENSE\n\nProjects around VEDA is licensed in **MIT** license.\nSo you can use them anywhere you want! --\x3e\n\n\n---\n\n\nIf you like it, please post to Twitter with hashtag `#VEDAJS`.\nWe\'ll be happy to see your tweets!\ud83d\ude38\n\n<a href="https://twitter.com/intent/tweet?url=https://veda.gl/&hashtags=vedajs" target="\\_blank">Tweet with #VEDAJS</a>\n'),ja:Object(i.default)('<div align="center">\n  <img alt="logo" src="/static/images/logo_720h.png" width="192"/>\n  <h1>VEDA</h1><i>VJ system on Atom</i>\n  <br/>\n</div>\n\n\n\x3c!-- ## Atom\u4e0a\u3067\u52d5\u4f5c\u3059\u308bVJ\u30b7\u30b9\u30c6\u30e0 --\x3e\n\nVEDA\u306f\u3001Atom\u30a8\u30c7\u30a3\u30bf\u3067\u306eVJ\u3084\u30e9\u30a4\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u53ef\u80fd\u306b\u3059\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\n\n![](https://user-images.githubusercontent.com/1403842/28673275-1d42b062-731d-11e7-92b0-bde5ca1f1cae.gif)\n\n\n### \u4f7f\u3044\u3084\u3059\u3044GLSL\u5b9f\u884c\u74b0\u5883\n\nVEDA\u306f\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3069\u3061\u3089\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001<a target="\\_blank" href="http://glslsandbox.com/">GLSL Sandbox</a>\u3084<a target="\\_blank" href="https://vertexshaderart.com/">vertexshaderart.com</a>\u3068\u3044\u3063\u305fGLSL\u74b0\u5883\u3068\u540c\u3058uniform\u5909\u6570\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n\n### \u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\n\nVEDA\u306fWeb\u6280\u8853\u306b\u3088\u3063\u3066\u958b\u767a\u3055\u308c\u3001Atom\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001Windows, macOS, Linux\u306e\u3069\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n\n### \u81ea\u52d5\u88dc\u5b8c\u3001linter\u3001etc\u2026\u2026\n\n\u30e6\u30fc\u30b6\u30fc\u306f\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308bAtom\u30d1\u30c3\u30b1\u30fc\u30b8\u3084\u30b9\u30cb\u30da\u30c3\u30c8\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001VEDA\u306f <a target="\\_blank" href="https://atom.io/packages/autocomplete-glsl">autocomplete-glsl</a>\u3001<a target="\\_blank" href="https://atom.io/packages/linter-glsl">linter-glsl</a>\u3092\u81ea\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u5feb\u9069\u306aGLSL\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u74b0\u5883\u3092\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n\n### Audio, MIDI, OSC, and more!\n\nVEDA\u3067\u306f\u3001\u69d8\u3005\u306a\u30c7\u30fc\u30bf\u3092GLSL\u5185\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070:\n\n- \u97f3\u58f0\u5165\u529b\n- MIDI\u5165\u529b\n- OSC\n- Web\u30ab\u30e1\u30e9\n- \u30b2\u30fc\u30e0\u30d1\u30c3\u30c9\n- \u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\n- \u30de\u30a6\u30b9\u4f4d\u7f6e\n\n\n\x3c!-- ## VEDA.js\n\nVEDA.js\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067GLSL\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u5143\u3005\u306fVEDA\u306eGLSL\u30a8\u30f3\u30b8\u30f3\u3068\u3057\u3066\u958b\u767a\u3055\u308c\u3001\u5f8c\u306bnpm\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u516c\u958b\u3055\u308c\u307e\u3057\u305f\u3002\n\n[VEDA.js](/vedajs) --\x3e\n\n\n\x3c!-- ## \u30e9\u30a4\u30bb\u30f3\u30b9\n\nVEDA\u3001\u3042\u308b\u3044\u306f\u95a2\u9023\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u5168\u3066 **MIT** \u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u3069\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3082\u5236\u9650\u306a\u304f\u5229\u7528\u3067\u304d\u307e\u3059\uff01 --\x3e\n\n\n<hr/>\n\n\nVEDA\u3092\u6c17\u306b\u5165\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u3089\u3001\u305c\u3072[\u30cf\u30c3\u30b7\u30e5\u30bf\u30b0 `#VEDAJS` \u3067\u30c4\u30a4\u30fc\u30c8](https://twitter.com/intent/tweet?url=https://veda.gl/&hashtags=vedajs)\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u7686\u3055\u3093\u306e\u3054\u610f\u898b\u30fb\u3054\u611f\u60f3\u3092\u304a\u5f85\u3061\u3057\u3066\u3044\u307e\u3059\uff01\ud83d\ude38\n')};t.default=Object(r.b)()(function(){return o.a.createElement(s.a,{shader:l,article:c})})},vlRD:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){var n=e("RNiq");return{page:n.default||n}}])}},[["vlRD",1,0]]]);