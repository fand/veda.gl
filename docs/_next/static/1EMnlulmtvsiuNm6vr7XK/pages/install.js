(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{KFYT:function(n,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/install",function(){var n=a("nKEB");return{page:n.default||n}}])},nKEB:function(n,t,a){"use strict";a.r(t);var e=a("q1tI"),i=a.n(e),l=a("/MKj"),o=a("SQ8s"),s=a("o2GN");t.default=Object(l.b)()(function(){return i.a.createElement(o.a,{path:"/install",article:{en:Object(s.default)('---\ntitle: Install VEDA\n---\n# Install VEDA\n\nLet your editor blink!\n\n![](https://user-images.githubusercontent.com/1403842/28673275-1d42b062-731d-11e7-92b0-bde5ca1f1cae.gif)\n\n<div align="center" style="line-height: 40px;">![GitHub stars](https://img.shields.io/github/stars/fand/veda.svg?style=social)\n![TravisCI](https://img.shields.io/travis/fand/veda.svg) ![license MIT](https://img.shields.io/apm/dm/veda.svg) ![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)\n</div>\n\n\n\n## 1. Install Prerequisites\n\nVEDA depends on following softwares to be installed:\n\n- Python 2.x\n- glslangValidator\n\n\n### Python 2.x\n\nPython 2.x is required to build native add-ons in VEDA\'s dependency.\nCheck the version of your python with `python -V`.\n\nIf you\'ve already installed both Python 2 and 3, you have to tell npm to use python 2.\nRun `npm config set python python2`.\n\n\n### glslangValidator\n\n`glslangValidator` is used to check GLSL code in VEDA.\nPlease Install it by following the steps below.\n\n\n#### macOS\n\nIf you are uning macOS, glslangValidator can be installed by homebrew.\n\n`brew install glslang`\n\nThe path of glslangValidator can also be specified in the settings of VEDA.\nAdd the path of glslangValidator (e.g.: `/usr/local/bin/glslangValidator`) to `glslangValidator path` property.\n\n#### Windows or Linux\n\nIf you are uning Windows or Linux, the best way to install glslangValidator is to install Vulkan SDK.\nGet the SDK from here:\n\nhttps://www.lunarg.com/vulkan-sdk/\n\nAfter that, add installed glslangValidator to your PATH environment variable.\nIn Windows, glslangValidator will be installed in `C:\\VulkanSDK\\( version )\\Bin`.\n\nThe path of glslangValidator can also be specified in the settings of VEDA.\nAdd the path of glslangValidator (e.g.: `C:\\VulkanSDK( version )\\Bin\\glslangValidator.exe`) to `glslangValidator path` property.\n\n\n## 2. Install VEDA\n\nThen install VEDA from Atom\'s `Settings` view or by `apm` like this:\n\n```bash\napm install vedajs\n```\n\n---\n\nNow VEDA is ready for you!\nRead [USAGE](/usage) to learn how to use it.\n'),ja:Object(s.default)('---\ntitle: VEDA\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n---\n# VEDA\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nAtom\u3092\u5149\u3089\u305b\u3088\u3046\u3002\n\n![](https://user-images.githubusercontent.com/1403842/28673275-1d42b062-731d-11e7-92b0-bde5ca1f1cae.gif)\n\n<div align="center" style="line-height: 40px;">![GitHub stars](https://img.shields.io/github/stars/fand/veda.svg?style=social)\n![TravisCI](https://img.shields.io/travis/fand/veda.svg) ![license MIT](https://img.shields.io/apm/dm/veda.svg) ![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)\n</div>\n\n\n## 1. \u4e8b\u524d\u6e96\u5099\n\nVEDA\u306f\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305a\u306f\u3053\u308c\u3089\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\n\n- Python 2.x\n- glslangValidator\n\n\n### Python 2.x\n\nVEDA\u306fNode.js\u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30a2\u30c9\u30aa\u30f3\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u3001Python 2\u7cfb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n`python -V` \u3092\u5b9f\u884c\u3057\u3066\u3001Python\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u65e2\u306bPython2\u30683\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u306e\u5834\u5408\u3001npm\u304cpython2\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089 `npm config set python python2` \u3092\u5b9f\u884c\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n### glslangValidator\n\n`glslangValidator` \u306fGLSL\u30b3\u30fc\u30c9\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5f93\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n#### macOS\n\nhomebrew\u3067\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\n`brew install glslang`\n\n\n#### Windows or Linux\n\nWindows\u3068Linux\u306e\u5834\u5408\u3001Vulkan SDK\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068glslangValidator\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089Vulkan SDK\u3092\u5165\u624b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nhttps://www.lunarg.com/vulkan-sdk/\n\n\u7d9a\u3044\u3066\u3001glslangValidator\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u5834\u6240\u3092\u74b0\u5883\u5909\u6570 `PATH` \u306b\u52a0\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nWindows\u306e\u5834\u5408\u3001glslangValidator\u306f `C:\\VulkanSDK\\( version )\\Bin` \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\nglslangValidator \u306e\u5834\u6240\u306f\u3001VEDA\u306e\u8a2d\u5b9a\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\n## 2. VEDA\u672c\u4f53\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nVEDA\u3092Atom\u306e `Settings` \u30bf\u30d6\u304b\u3001`apm` \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\n```bash\napm install vedajs\n```\n\n---\n\n\u3053\u308c\u3067VEDA\u306e\u6e96\u5099\u304c\u3067\u304d\u307e\u3057\u305f\uff01\n\u6b21\u306f [\u64cd\u4f5c\u65b9\u6cd5](/usage?lang=ja) \u306e\u30da\u30fc\u30b8\u3067VEDA\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u899a\u3048\u307e\u3057\u3087\u3046\u3002\n')},shader:{attach:function(n){n.loadFragmentShader("// Author: @amagitakayosi\n// 2017-10-23\nprecision mediump float;\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\n// Util functions copied from http://glslsandbox.com/e#43153.1\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,s,-s,c);}\nmat2 m2 = mat2(0.95534, 0.29552, -0.29552, 0.95534);\nfloat tri(in float x){return clamp(abs(fract(x)-.5),0.01,0.49);}\nvec2 tri2(in vec2 p){return vec2(tri(p.x)+tri(p.y),tri(p.y+tri(p.x)));}\n\nfloat triNoise2d(in vec2 p, float spd)\n{\n  float z=1.8;\n  float z2=2.5;\n  float rz = 0.;\n  p *= mm2(p.x*0.06);\n  vec2 bp = p;\n  for (float i=0.; i<5.; i++ )\n  {\n    vec2 dg = tri2(bp*1.85)*.75;\n    dg *= mm2(time*spd);\n    p -= dg/z2;\n\n    bp *= 1.3;\n    z2 *= .45;\n    z *= .42;\n    p *= 1.21 + (rz-1.0)*.02;\n\n    rz += tri(p.x+tri(p.y))*z;\n    p*= -m2;\n  }\n  return clamp(1./pow(rz*29., 1.3),0.,.55);\n}\n\nvoid main() {\n  vec2 p = (gl_FragCoord.xy * 2. - resolution) / min(resolution.x, resolution.y);\n  float t = time * .3 + 100.;\n\n  p = p * .5 + 1.;\n  p.x += 2.;  // Noises are too weak around origin\n\n  p /= vec2(\n    triNoise2d(p, p.x*.002+t*.002),\n    triNoise2d(p, p.y*.002+t*.002)\n  ) * 20.;  // zoom factor\n\n  gl_FragColor = vec4(\n    0.8 * sin(p.x * 2.3 + 2.7),\n    0.8 * sin(p.y * 2.2 + 3.7),\n    .8,\n    1.0\n  ) * .6;\n}\n")}}})})}},[["KFYT",1,0]]]);