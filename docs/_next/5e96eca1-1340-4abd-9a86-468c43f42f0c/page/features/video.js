module.exports=__NEXT_REGISTER_PAGE("/features/video",function(){var a=webpackJsonp([9],{320:function(a,b,c){a.exports=c(321)},321:function(a,b,c){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var d=c(0),e=c.n(d),f=c(5),g=c(3),h=c(6);b["default"]=Object(h.a)(function(){return e.a.createElement(f.a,{path:"/features/video",article:{en:Object(g["default"])("---\ntitle: Loading videos - VEDA.js\ndescription: How to use video files in GLSL with VEDA.js\n---\n# Loading videos\n\n## Usage\n\n```js\nveda.loadTexture('texture_name', textureUrlOrPath);\n```\n\nYou can also unload the texture to reduce memory usage.\n\n```js\nveda.loadTexture('texture_name', textureUrlOrPath);\n```\n\n---\n\nVideo by [beeple - ANGULAR](https://vimeo.com/174504082)\n")},shader:{attach:function(a){a.loadTexture("video1","/static/videos/1.mp4"),a.loadTexture("video2","/static/videos/2.mp4"),a.loadTexture("video3","/static/videos/3.mp4"),a.loadFragmentShader("precision mediump float;\nuniform float time;\nuniform vec2 resolution;\nuniform sampler2D video1;\nuniform sampler2D backbuffer;\n\nvoid main() {\n    vec2 p = (gl_FragCoord.xy * 2. - resolution) / min(resolution.x, resolution.y);\n    p = abs(p);\n\n    if (mod(time, 10.) < 5.) {\n        p *= p;\n    }\n\n    gl_FragColor = texture2D(video1, p) * .2;\n\n    vec2 uv = gl_FragCoord.xy / resolution;\n    gl_FragColor += texture2D(backbuffer, uv) * .8;\n}\n")},detach:function(a){a.unloadTexture("video1","/static/videos/1.mp4"),a.unloadTexture("video2","/static/videos/2.mp4"),a.unloadTexture("video3","/static/videos/3.mp4")}}})})}},[320]);return{page:a.default}});