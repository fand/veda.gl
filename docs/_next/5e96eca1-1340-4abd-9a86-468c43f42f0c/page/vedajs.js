module.exports=__NEXT_REGISTER_PAGE("/vedajs",function(){var a=webpackJsonp([3],{333:function(a,b,c){a.exports=c(334)},334:function(a,b,c){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var d=c(0),e=c.n(d),f=c(5),g=c(3),h=c(6);b["default"]=Object(h.a)(function(){return e.a.createElement(f.a,{path:"/vedajs",article:{en:Object(g["default"])("---\ntitle: VEDA.js\n---\n<div align=\"center\">\n  <img alt=\"logo\" src=\"/static/images/logo_720h.png\" width=\"192\"/>\n\n  <h1>VEDA.js</h1>\n  <i>Shader Art Framework for Web</i>\n\n  ![npm version](https://img.shields.io/npm/v/vedajs.svg) ![license MIT](https://img.shields.io/npm/l/vedajs.svg) [![hashtag #vedajs](https://img.shields.io/badge/hashtag-vedajs-blue.svg)](https://twitter.com/search?f=tweets&q=%23vedajs&src=typd)\n</div>\n\n\n## What is VEDA.js?\n\nVEDA.js is a JavaScript framework to run GLSL shaders on browsers.\nIt was originally created as a GLSL engine of [VEDA](https://atom.io/packages/veda), but we realized that it's useful to run shaders on browsers so published VEDA.js as a standalone library.\n\n\n## Install\n\nYou can install VEDA.js with `npm` or `yarn`.\n\n```bash\nnpm install vedajs\n```\n\n\n## Usage\n\n```js\nimport Veda from 'vedajs';\n\nconst veda = new Veda();\n\nveda.setCanvas(canvas);\nveda.loadFragmentShader(code);\n\nveda.play();\n```\n\n\n## Advanced Usage\n\n### Fragment shader\n\n```js\nveda.loadFragmentShader(code);\n```\n\nThis is equivalent to\n\n```js\nveda.loadShader({ fs: code });\n```\n\n\n### Vertex shader\n\n```js\nveda.loadVertexShader(code);\n```\n\nThis is equivalent to\n\n```js\nveda.loadShader({ vs: code });\n```\n\n\n### Using both\n\nPass a shader object to `loadShader`.\n\n```js\nveda.loadShader({\n  vs: vertexShaderCode,\n  fs: fragmentShaderCode,\n});\n```\n\n\n### Multipass rendering\n\nVEDA.js supports multipass rendering.\nPass `loadShader` an array of shaders corresponding to each rendering pass.\n\n```js\nveda.loadShader([{\n  vs: vertexShaderFor1stPass,\n  fs: fragmentShaderFor1stPass\n}, {\n  fs: fragmentShaderFor2ndPass\n}]);\n```\n\n\n### Audio input\n\n```js\nveda.toggleAudio(true);\nveda.loadShader(shader);\n```\n\n\n### MIDI input\n\n```js\nveda.toggleMidi(true);\nveda.loadShader(shader);\n```\n\n\n### WebCam input\n\n```js\nveda.toggleCamera(true);\nveda.loadShader(shader);\n```\n\n\n## Keyboard input\n\n```js\nveda.toggleKeyboard(true);\nveda.loadShader(shader);\n```\n\n\n## Gamepad input\n\n```js\nveda.toggleGamepad(true);\nveda.loadShader(shader);\n```\n\n\n## Author\n\nTakayosi Amagi\n\n- Website: [gmork.in](https://gmork.in)\n- Twitter: [@amagitakayosi](https://twitter.com/amagitakayosi)\n- GitHub: [fand](https://github.com/fand)\n\n\n## LICENSE\n\nMIT\n"),ja:Object(g["default"])("---\ntitle: VEDA.js\n---\n<div align=\"center\">\n  <img alt=\"logo\" src=\"/static/images/logo_720h.png\" width=\"192\"/>\n\n  <h1>VEDA.js</h1>\n  <i>Shader Art Framework for Web</i>\n\n  ![npm version](https://img.shields.io/npm/v/vedajs.svg) ![license MIT](https://img.shields.io/npm/l/vedajs.svg) [![hashtag #vedajs](https://img.shields.io/badge/hashtag-vedajs-blue.svg)](https://twitter.com/search?f=tweets&q=%23vedajs&src=typd)\n</div>\n\n\n## What is VEDA.js?\n\nVEDA.js\u306F\u3001Web\u4E0A\u3067\u30B7\u30A7\u30FC\u30C0\u30FC\u30A2\u30FC\u30C8\u3092\u5B9F\u73FE\u3059\u308B\u305F\u3081\u306E\u30D5\u30EC\u30FC\u30E0\u30EF\u30FC\u30AF\u3067\u3059\u3002\n\u5143\u3005\u306FVEDA\u306EGLSL\u30A8\u30F3\u30B8\u30F3\u3068\u3057\u3066\u958B\u767A\u3055\u308C\u307E\u3057\u305F\u304C\u3001Web\u4E0A\u3067\u306E\u30B7\u30A7\u30FC\u30C0\u30FC\u8868\u73FE\u306B\u3082\u5F79\u306B\u7ACB\u3064\u3053\u3068\u304C\u308F\u304B\u308A\u3001\u5358\u72EC\u306Enpm\u30D1\u30C3\u30B1\u30FC\u30B8\u3068\u3057\u3066\u516C\u958B\u3057\u307E\u3057\u305F\u3002\n\n\n## \u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\n\n`npm` \u307E\u305F\u306F `yarn` \u3067\u30A4\u30F3\u30B9\u30C8\u30FC\u30EB\u3067\u304D\u307E\u3059\u3002\n\n```bash\nnpm install vedajs\n```\n\n\n## \u4F7F\u3044\u65B9\n\n```js\nimport Veda from 'vedajs';\n\nconst veda = new Veda();\n\nveda.setCanvas(canvas);\nveda.loadFragmentShader(code);\n\nveda.play();\n```\n\n\n## \u8A73\u3057\u3044\u4F7F\u3044\u65B9\n\n### \u30D5\u30E9\u30B0\u30E1\u30F3\u30C8\u30B7\u30A7\u30FC\u30C0\u30FC\n\n```js\nveda.loadFragmentShader(code);\n```\n\nloadFragmentShader\u306F\u4EE5\u4E0B\u306E\u30B3\u30FC\u30C9\u3068\u7B49\u4FA1\u3067\u3059:\n\n```js\nveda.loadShader({ fs: code });\n```\n\n\n### \u9802\u70B9\u30B7\u30A7\u30FC\u30C0\u30FC\n\n```js\nveda.loadVertexShader(code);\n```\n\nloadVertexShader\u306F\u4EE5\u4E0B\u306E\u30B3\u30FC\u30C9\u3068\u7B49\u4FA1\u3067\u3059:\n\n```js\nveda.loadShader({ vs: code });\n```\n\n\n### \u9802\u70B9\u30B7\u30A7\u30FC\u30C0\u30FC\u3068\u30D5\u30E9\u30B0\u30E1\u30F3\u30C8\u30B7\u30A7\u30FC\u30C0\u30FC\u3092\u7D44\u307F\u5408\u308F\u305B\u308B\n\n`loadShader` \u306B\u30B7\u30A7\u30FC\u30C0\u30FC\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3092\u6E21\u3057\u3066\u304F\u3060\u3055\u3044\u3002\n\n```js\nveda.loadShader({\n  vs: vertexShaderCode,\n  fs: fragmentShaderCode,\n});\n```\n\n\n### \u30DE\u30EB\u30C1\u30D1\u30B9\u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\n\nVEDA.js\u306F\u30DE\u30EB\u30C1\u30D1\u30B9\u30EC\u30F3\u30C0\u30EA\u30F3\u30B0\u3092\u30B5\u30DD\u30FC\u30C8\u3057\u3066\u3044\u307E\u3059\u3002\n`loadShader` \u306B\u3001\u5404\u30D1\u30B9\u306B\u5BFE\u5FDC\u3059\u308B\u30B7\u30A7\u30FC\u30C0\u30FC\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306E\u914D\u5217\u3092\u6E21\u3057\u3066\u304F\u3060\u3055\u3044\u3002\n\n```js\nveda.loadShader([{\n  vs: vertexShaderFor1stPass,\n  fs: fragmentShaderFor1stPass\n}, {\n  fs: fragmentShaderFor2ndPass\n}]);\n```\n\n\n### \u97F3\u58F0\u5165\u529B\n\n```js\nveda.toggleAudio(true);\nveda.loadShader(shader);\n```\n\n\n### MIDI\u5165\u529B\n\n```js\nveda.toggleMidi(true);\nveda.loadShader(shader);\n```\n\n\n### Web\u30AB\u30E1\u30E9\n\n```js\nveda.toggleCamera(true);\nveda.loadShader(shader);\n```\n\n\n## \u30AD\u30FC\u30DC\u30FC\u30C9\u5165\u529B\n\n```js\nveda.toggleKeyboard(true);\nveda.loadShader(shader);\n```\n\n\n## \u30B2\u30FC\u30E0\u30D1\u30C3\u30C9\u5165\u529B\n\n```js\nveda.toggleGamepad(true);\nveda.loadShader(shader);\n```\n\n\n## \u4F5C\u8005\u306B\u3064\u3044\u3066\n\nTakayosi Amagi\u304C\u958B\u767A\u3057\u3066\u3044\u307E\u3059\u3002\n\n- Website: [gmork.in](https://gmork.in)\n- Twitter: [@amagitakayosi](https://twitter.com/amagitakayosi)\n- GitHub: [fand](https://github.com/fand)\n\n\n## \u30E9\u30A4\u30BB\u30F3\u30B9\n\nMIT\n")},shader:{attach:function(a){a.loadFragmentShader("// Author: @amagitakayosi\n// 2017-10-23\nprecision mediump float;\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\n// Util functions copied from http://glslsandbox.com/e#43153.1\nmat2 mm2(in float a){float c = cos(a), s = sin(a);return mat2(c,s,-s,c);}\nmat2 m2 = mat2(0.95534, 0.29552, -0.29552, 0.95534);\nfloat tri(in float x){return clamp(abs(fract(x)-.5),0.01,0.49);}\nvec2 tri2(in vec2 p){return vec2(tri(p.x)+tri(p.y),tri(p.y+tri(p.x)));}\n\nfloat triNoise2d(in vec2 p, float spd)\n{\n  float z=1.8;\n  float z2=2.5;\n  float rz = 0.;\n  p *= mm2(p.x*0.06);\n  vec2 bp = p;\n  for (float i=0.; i<5.; i++ )\n  {\n    vec2 dg = tri2(bp*1.85)*.75;\n    dg *= mm2(time*spd);\n    p -= dg/z2;\n\n    bp *= 1.3;\n    z2 *= .45;\n    z *= .42;\n    p *= 1.21 + (rz-1.0)*.02;\n\n    rz += tri(p.x+tri(p.y))*z;\n    p*= -m2;\n  }\n  return clamp(1./pow(rz*29., 1.3),0.,.55);\n}\n\nvoid main() {\n  vec2 p = (gl_FragCoord.xy * 2. - resolution) / min(resolution.x, resolution.y);\n  float t = time * .3 + 100.;\n\n  p = p * .5 + 1.;\n  p.x += 2.;  // Noises are too weak around origin\n\n  p /= vec2(\n    triNoise2d(p, p.x*.002+t*.002),\n    triNoise2d(p, p.y*.002+t*.002)\n  ) * 20.;  // zoom factor\n\n  gl_FragColor = vec4(\n    0.8 * sin(p.x * 2.3 + 2.7),\n    0.8 * sin(p.y * 2.2 + 3.7),\n    .8,\n    1.0\n  ) * .6;\n}\n")}}})})}},[333]);return{page:a.default}});